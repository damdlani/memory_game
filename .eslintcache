[{"C:\\dev\\'memory'\\memory_game\\src\\index.js":"1","C:\\dev\\'memory'\\memory_game\\src\\App.js":"2","C:\\dev\\'memory'\\memory_game\\src\\reportWebVitals.js":"3","C:\\dev\\'memory'\\memory_game\\src\\MainPage\\MainPage.js":"4","C:\\dev\\'memory'\\memory_game\\src\\GlobalStyle.js":"5","C:\\dev\\'memory'\\memory_game\\src\\theme.js":"6","C:\\dev\\'memory'\\memory_game\\src\\MainPage\\styled.js":"7","C:\\dev\\'memory'\\memory_game\\src\\cards.js":"8","C:\\dev\\'memory'\\memory_game\\src\\MainPage\\Card.js":"9","C:\\dev\\'memory'\\memory_game\\src\\useCards.js":"10","C:\\dev\\'memory'\\memory_game\\src\\shuffleArray.js":"11","C:\\dev\\'memory'\\memory_game\\src\\useTime.js":"12","C:\\dev\\'memory'\\memory_game\\src\\utils.js":"13","C:\\dev\\'memory'\\memory_game\\src\\MainPage\\Result.js":"14","C:\\dev\\'memory'\\memory_game\\src\\useColors.js":"15"},{"size":686,"mtime":1619789421887,"results":"16","hashOfConfig":"17"},{"size":112,"mtime":1619788867329,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1279,"mtime":1620285731812,"results":"20","hashOfConfig":"17"},{"size":365,"mtime":1620284857657,"results":"21","hashOfConfig":"17"},{"size":31,"mtime":1619789411451,"results":"22","hashOfConfig":"17"},{"size":734,"mtime":1620285718778,"results":"23","hashOfConfig":"17"},{"size":2655,"mtime":1620286597743,"results":"24","hashOfConfig":"17"},{"size":843,"mtime":1620279845828,"results":"25","hashOfConfig":"17"},{"size":1979,"mtime":1620283254647,"results":"26","hashOfConfig":"17"},{"size":242,"mtime":1620132127331,"results":"27","hashOfConfig":"17"},{"size":692,"mtime":1620134622178,"results":"28","hashOfConfig":"17"},{"size":80,"mtime":1620286081673,"results":"29","hashOfConfig":"17"},{"size":1020,"mtime":1620280362260,"results":"30","hashOfConfig":"17"},{"size":657,"mtime":1620286324481,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"137ai3r",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\'memory'\\memory_game\\src\\index.js",[],["66","67"],"C:\\dev\\'memory'\\memory_game\\src\\App.js",[],"C:\\dev\\'memory'\\memory_game\\src\\reportWebVitals.js",[],"C:\\dev\\'memory'\\memory_game\\src\\MainPage\\MainPage.js",["68","69"],"import { StyledBoard } from \"./styled\";\r\nimport { Card } from \"./Card\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useCards } from \"../useCards\";\r\nimport { useTime } from \"../useTime\";\r\nimport { presentationTime } from \"../utils\";\r\nimport { Result } from \"./Result\";\r\n\r\nexport const MainPage = () => {\r\n  const {\r\n    cards,\r\n    setCards,\r\n    updateActiveCards,\r\n    clickCount,\r\n    setClickCount,\r\n  } = useCards();\r\n  const { getEndDate, calculateTime } = useTime();\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!cards.some(({ off }) => off === false)) {\r\n      getEndDate();\r\n      setFinished(true);\r\n    }\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCards((cards) =>\r\n        cards.map((card) => {\r\n          return { ...card, covered: true };\r\n        })\r\n      );\r\n    }, presentationTime);\r\n  }, []);\r\n\r\n  return (\r\n    <StyledBoard>\r\n      {cards.map((card) => (\r\n        <Card\r\n          key={card.id}\r\n          card={card}\r\n          updateActiveCards={updateActiveCards}\r\n          setCards={setCards}\r\n          setClickCount={setClickCount}\r\n        ></Card>\r\n      ))}\r\n      {finished && <Result time={calculateTime()} clickCount={clickCount} />}\r\n    </StyledBoard>\r\n  );\r\n};\r\n","C:\\dev\\'memory'\\memory_game\\src\\GlobalStyle.js",[],"C:\\dev\\'memory'\\memory_game\\src\\theme.js",[],"C:\\dev\\'memory'\\memory_game\\src\\MainPage\\styled.js",[],"C:\\dev\\'memory'\\memory_game\\src\\cards.js",[],"C:\\dev\\'memory'\\memory_game\\src\\MainPage\\Card.js",["70","71"],"import React, { useEffect, useState } from \"react\";\r\nimport { StyledCard } from \"./styled\";\r\n\r\nexport const Card = ({\r\n  card,\r\n  setCards,\r\n  updateActiveCards,\r\n  setClickCount\r\n}) => {\r\n  const { color, covered, off, blocked, id } = card;\r\n\r\n  const updateCards = () => {\r\n    setCards((cards) =>\r\n      cards.map((card) => {\r\n        if (card.id === id) {\r\n          return {\r\n            ...card,\r\n            covered: !covered,\r\n          };\r\n        }\r\n        return card;\r\n      })\r\n    );\r\n  };\r\n\r\n  const onClickHandle = () => {\r\n    updateCards();\r\n    updateActiveCards(card);\r\n    setClickCount(count => count + 1);\r\n    \r\n  };\r\n\r\n  return (\r\n    <StyledCard\r\n      color={color}\r\n      covered={covered}\r\n      off={off}\r\n      disabled={!covered || blocked || off}\r\n      onClick={onClickHandle}\r\n    ></StyledCard>\r\n  );\r\n};\r\n","C:\\dev\\'memory'\\memory_game\\src\\useCards.js",["72"],"import { useEffect, useState } from \"react\";\r\nimport { GenerateCards } from \"./cards\";\r\nimport { twoCardsUncoveredTime } from \"./utils\";\r\n\r\nexport const useCards = () => {\r\n  const [cards, setCards] = useState(GenerateCards());\r\n  const [activeCards, setActiveCards] = useState([]);\r\n  const [clickCount, setClickCount] = useState(0);\r\n\r\n  const blockCardsWhileComparing = () => {\r\n    if (activeCards.length === 2) {\r\n      setCards((cards) =>\r\n        cards.map((card) => {\r\n          return { ...card, blocked: true };\r\n        })\r\n      );\r\n    }\r\n    return;\r\n  };\r\n\r\n  const markPairedCardsOff = () => {\r\n    setCards((cards) =>\r\n      cards.map((card) => {\r\n        if (activeCards.find(({ id }) => id === card.id)) {\r\n          return { ...card, off: true };\r\n        }\r\n        return { ...card, blocked: false };\r\n      })\r\n    );\r\n  };\r\n\r\n  const coverNotPairedCards = () => {\r\n    setCards((cards) =>\r\n      cards.map((card) => {\r\n        if (card.off === false) {\r\n          return { ...card, covered: true, blocked: false };\r\n        }\r\n        return { ...card, covered: false };\r\n      })\r\n    );\r\n  };\r\n\r\n  const compareActiveCards = () => {\r\n    if (activeCards.length < 2) return;\r\n\r\n    if (activeCards[0].color === activeCards[1].color) {\r\n      setTimeout(() => {\r\n        markPairedCardsOff();\r\n      }, twoCardsUncoveredTime);\r\n      setActiveCards([]);\r\n    }\r\n\r\n    if (activeCards[0].color !== activeCards[1].color) {\r\n      setTimeout(() => {\r\n        coverNotPairedCards();\r\n      }, twoCardsUncoveredTime);\r\n\r\n      setActiveCards([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    compareActiveCards();\r\n    blockCardsWhileComparing();\r\n  }, [activeCards]);\r\n\r\n  const updateActiveCards = (cardData) => {\r\n    setActiveCards((activeCards) => [\r\n      ...activeCards,\r\n      { ...cardData, covered: false },\r\n    ]);\r\n  };\r\n\r\n  return {\r\n    cards,\r\n    setCards,\r\n    activeCards,\r\n    updateActiveCards,\r\n    clickCount,\r\n    setClickCount,\r\n  };\r\n};\r\n","C:\\dev\\'memory'\\memory_game\\src\\shuffleArray.js",[],"C:\\dev\\'memory'\\memory_game\\src\\useTime.js",[],"C:\\dev\\'memory'\\memory_game\\src\\utils.js",[],"C:\\dev\\'memory'\\memory_game\\src\\MainPage\\Result.js",[],"C:\\dev\\'memory'\\memory_game\\src\\useColors.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":25,"column":6,"nodeType":"79","endLine":25,"endColumn":13,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":35,"column":6,"nodeType":"79","endLine":35,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":1,"column":28,"nodeType":"85","messageId":"86","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"88","line":65,"column":6,"nodeType":"79","endLine":65,"endColumn":19,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEndDate'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has a missing dependency: 'setCards'. Either include it or remove the dependency array.",["93"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'blockCardsWhileComparing' and 'compareActiveCards'. Either include them or remove the dependency array.",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [cards, getEndDate]",{"range":"101","text":"102"},"Update the dependencies array to be: [setCards]",{"range":"103","text":"104"},"Update the dependencies array to be: [activeCards, blockCardsWhileComparing, compareActiveCards]",{"range":"105","text":"106"},[672,679],"[cards, getEndDate]",[888,890],"[setCards]",[1668,1681],"[activeCards, blockCardsWhileComparing, compareActiveCards]"]