[{"C:\\dev\\'memory'\\memory_game\\src\\index.js":"1","C:\\dev\\'memory'\\memory_game\\src\\App.js":"2","C:\\dev\\'memory'\\memory_game\\src\\reportWebVitals.js":"3","C:\\dev\\'memory'\\memory_game\\src\\MainPage\\MainPage.js":"4","C:\\dev\\'memory'\\memory_game\\src\\GlobalStyle.js":"5","C:\\dev\\'memory'\\memory_game\\src\\theme.js":"6","C:\\dev\\'memory'\\memory_game\\src\\MainPage\\styled.js":"7","C:\\dev\\'memory'\\memory_game\\src\\cards.js":"8","C:\\dev\\'memory'\\memory_game\\src\\useCards.js":"9","C:\\dev\\'memory'\\memory_game\\src\\shuffleArray.js":"10","C:\\dev\\'memory'\\memory_game\\src\\useTime.js":"11","C:\\dev\\'memory'\\memory_game\\src\\utils.js":"12","C:\\dev\\'memory'\\memory_game\\src\\useColors.js":"13","C:\\dev\\'memory'\\memory_game\\src\\MainPage\\Card.js":"14","C:\\dev\\'memory'\\memory_game\\src\\MainPage\\Result.js":"15","C:\\dev\\'memory'\\memory_game\\src\\HomePage\\HomePage.js":"16","C:\\dev\\'memory'\\memory_game\\src\\difficultyLevels.js":"17"},{"size":686,"mtime":1619789421887,"results":"18","hashOfConfig":"19"},{"size":792,"mtime":1623151795415,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1447,"mtime":1623151808389,"results":"22","hashOfConfig":"19"},{"size":375,"mtime":1620375539728,"results":"23","hashOfConfig":"19"},{"size":31,"mtime":1619789411451,"results":"24","hashOfConfig":"19"},{"size":961,"mtime":1620404730533,"results":"25","hashOfConfig":"19"},{"size":608,"mtime":1620291562713,"results":"26","hashOfConfig":"19"},{"size":2001,"mtime":1620377935716,"results":"27","hashOfConfig":"19"},{"size":242,"mtime":1620132127331,"results":"28","hashOfConfig":"19"},{"size":692,"mtime":1620134622178,"results":"29","hashOfConfig":"19"},{"size":80,"mtime":1620404730544,"results":"30","hashOfConfig":"19"},{"size":663,"mtime":1623148673968,"results":"31","hashOfConfig":"19"},{"size":843,"mtime":1620404730486,"results":"32","hashOfConfig":"19"},{"size":1020,"mtime":1620404730524,"results":"33","hashOfConfig":"19"},{"size":358,"mtime":1623151820360,"results":"34","hashOfConfig":"19"},{"size":82,"mtime":1623151673025,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"137ai3r",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\'memory'\\memory_game\\src\\index.js",[],"C:\\dev\\'memory'\\memory_game\\src\\App.js",["72"],"C:\\dev\\'memory'\\memory_game\\src\\reportWebVitals.js",[],"C:\\dev\\'memory'\\memory_game\\src\\MainPage\\MainPage.js",["73","74"],"import { StyledBoard, Container } from \"./styled\";\r\nimport { Card } from \"./Card\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useCards } from \"../useCards\";\r\nimport { useTime } from \"../useTime\";\r\nimport { presentationTime } from \"../utils\";\r\nimport { Result } from \"./Result\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const MainPage = ({cardsNumber}) => {\r\n  const {\r\n    cards,\r\n    setCards,\r\n    updateActiveCards,\r\n    clickCount,\r\n    setClickCount,\r\n  } = useCards(cardsNumber);\r\n  const { getEndDate, calculateTime } = useTime();\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!cards.some(({ off }) => off === false)) {\r\n      getEndDate();\r\n      setFinished(true);\r\n    }\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCards((cards) =>\r\n        cards.map((card) => {\r\n          return { ...card, covered: true };\r\n        })\r\n      );\r\n    }, presentationTime);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Link to=\"/\">Home</Link>\r\n      <StyledBoard>\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card.id}\r\n            card={card}\r\n            updateActiveCards={updateActiveCards}\r\n            setCards={setCards}\r\n            setClickCount={setClickCount}\r\n          ></Card>\r\n        ))}\r\n        {finished && <Result time={calculateTime()} clickCount={clickCount} />}\r\n      </StyledBoard>\r\n    </Container>\r\n  );\r\n};\r\n",["75","76"],"C:\\dev\\'memory'\\memory_game\\src\\GlobalStyle.js",[],"C:\\dev\\'memory'\\memory_game\\src\\theme.js",[],"C:\\dev\\'memory'\\memory_game\\src\\MainPage\\styled.js",[],"C:\\dev\\'memory'\\memory_game\\src\\cards.js",[],"C:\\dev\\'memory'\\memory_game\\src\\useCards.js",["77"],"C:\\dev\\'memory'\\memory_game\\src\\shuffleArray.js",[],"C:\\dev\\'memory'\\memory_game\\src\\useTime.js",[],"C:\\dev\\'memory'\\memory_game\\src\\utils.js",[],"C:\\dev\\'memory'\\memory_game\\src\\useColors.js",[],"C:\\dev\\'memory'\\memory_game\\src\\MainPage\\Card.js",[],"C:\\dev\\'memory'\\memory_game\\src\\MainPage\\Result.js",[],"C:\\dev\\'memory'\\memory_game\\src\\HomePage\\HomePage.js",[],"C:\\dev\\'memory'\\memory_game\\src\\difficultyLevels.js",[],{"ruleId":"78","severity":1,"message":"79","line":6,"column":3,"nodeType":"80","messageId":"81","endLine":6,"endColumn":7},{"ruleId":"82","severity":1,"message":"83","line":26,"column":6,"nodeType":"84","endLine":26,"endColumn":13,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":36,"column":6,"nodeType":"84","endLine":36,"endColumn":8,"suggestions":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"82","severity":1,"message":"92","line":65,"column":6,"nodeType":"84","endLine":65,"endColumn":19,"suggestions":"93"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEndDate'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'setCards'. Either include it or remove the dependency array.",["95"],"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"React Hook useEffect has missing dependencies: 'blockCardsWhileComparing' and 'compareActiveCards'. Either include them or remove the dependency array.",["98"],{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [cards, getEndDate]",{"range":"105","text":"106"},"Update the dependencies array to be: [setCards]",{"range":"107","text":"108"},"Update the dependencies array to be: [activeCards, blockCardsWhileComparing, compareActiveCards]",{"range":"109","text":"110"},[749,756],"[cards, getEndDate]",[965,967],"[setCards]",[1690,1703],"[activeCards, blockCardsWhileComparing, compareActiveCards]"]