{"version":3,"sources":["MainPage/styled.js","MainPage/Card.js","cards.js","useColors.js","shuffleArray.js","useCards.js","utils.js","MainPage/Result.js","common/StyledLink.js","MainPage/MainPage.js","useTime.js","HomePage/styled.js","HomePage/HomePage.js","difficultyLevels.js","App.js","GlobalStyle.js","reportWebVitals.js","index.js","theme.js"],"names":["Container","styled","div","StyledBoard","main","StyledCard","button","color","off","covered","Nav","nav","Card","card","setCards","updateActiveCards","setClickCount","blocked","id","disabled","onClick","cards","map","count","class","GenerateCards","cardsNumber","generateRandomColor","forbiddenColors","generateNumber","Math","ceil","random","some","forbidden","push","useColors","colors","length","forEach","nanoid","array","i","j","floor","temp","shuffleArray","useCards","useState","activeCards","setActiveCards","clickCount","compareActiveCards","setTimeout","find","useEffect","cardData","ResultBox","ResultP","p","TryAgain","Result","time","window","location","reload","StyledLink","Link","MainPage","startDate","setStartDate","endDate","setEndDate","getCurrentDate","Date","now","getEndDate","calculateTime","useTime","finished","setFinished","to","Title","h1","Subtitle","span","ListItem","li","HomePage","difficultyLevels","App","easy","medium","hard","path","GlobalStyle","createGlobalStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"4MAEaA,EAAYC,IAAOC,IAAV,2GAOTC,EAAcF,IAAOG,KAAV,4PAaXC,EAAaJ,IAAOK,OAAV,+LAGZ,YAA8B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QACtB,OAAID,EAAY,qBACZC,EAAe,eACZF,KAGK,YAA8B,IAA3BA,EAA0B,EAA1BA,MAAOE,EAAmB,EAAnBA,QACtB,OADyC,EAAVD,IACf,iBACZC,EAAe,eACZF,KAMG,YAAuB,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QAChB,OAAID,IAAQC,EAAgB,cACrB,aAIAC,EAAMT,IAAOU,IAAV,kD,OC3CHC,EAAO,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,kBAAmBC,EAAoB,EAApBA,cAChDT,EAAqCM,EAArCN,MAAOE,EAA8BI,EAA9BJ,QAASD,EAAqBK,EAArBL,IAAKS,EAAgBJ,EAAhBI,QAASC,EAAOL,EAAPK,GAsBtC,OACE,cAACb,EAAD,CACEE,MAAOA,EACPE,QAASA,EACTD,IAAKA,EACLW,UAAWV,GAAWQ,GAAWT,EACjCY,QAZkB,WAbpBN,GAAS,SAACO,GAAD,OACPA,EAAMC,KAAI,SAACT,GACT,OAAIA,EAAKK,KAAOA,EACP,2BACFL,GADL,IAEEJ,SAAUA,IAGPI,QAOXE,EAAkBF,GAClBG,GAAc,SAACO,GAAD,OAAWA,EAAQ,MAIjC,SAOE,mBAAGC,MAAM,oB,gBC9BFC,EAAgB,SAACC,GAM5B,IALA,IAAQC,ECHe,WACvB,IAAMC,EAAkB,CACtB,eACA,qBACA,kBAGIC,EAAiB,WACrB,OAAOC,KAAKC,KAAqB,IAAhBD,KAAKE,WAetB,MAAO,CACLL,oBAbwB,SAAtBA,IACJ,IAAMpB,EAAK,cAAUsB,IAAV,aAA+BA,IAA/B,aAAoDA,IAApD,KAET,IAAID,EAAgBK,MAAK,SAAAC,GAAS,OAAIA,IAAc3B,KAElD,OADAqB,EAAgBO,KAAK5B,GACdA,EAEPoB,MDf0BS,GAAxBT,oBAEFN,EAAQ,GACRgB,EAAS,GAERA,EAAOC,OAAUZ,EAAc,GACpCW,EAAOF,KAAKR,KAgBd,OAdAU,EAAOF,KAAP,MAAAE,EAAeA,GAEfA,EAAOE,SAAQ,SAAChC,GACdc,EAAMc,KAAK,CACTjB,GAAIsB,cACJ/B,SAAS,EACTD,KAAK,EACLS,SAAS,EACTV,aErBsB,SAAAkC,GACxB,IAAK,IAAIC,EAAID,EAAMH,OAAS,EAAGI,EAAI,EAAGA,IAAK,CACzC,IAAMC,EAAIb,KAAKc,MAAMd,KAAKE,UAAYU,EAAI,IACpCG,EAAOJ,EAAMC,GACnBD,EAAMC,GAAKD,EAAME,GACjBF,EAAME,GAAKE,GFoBfC,CAAazB,GAENA,GGvBI0B,EAAW,SAACrB,GACvB,MAA0BsB,mBAASvB,EAAcC,IAAjD,mBAAOL,EAAP,KAAcP,EAAd,KACA,EAAsCkC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBnC,EAAnB,KAmCMoC,EAAqB,WACrBH,EAAYX,OAAS,IAErBW,EAAY,GAAG1C,QAAU0C,EAAY,GAAG1C,QAC1C8C,YAAW,WAzBbvC,GAAS,SAACO,GAAD,OACPA,EAAMC,KAAI,SAACT,GACT,OAAIoC,EAAYK,MAAK,qBAAGpC,KAAgBL,EAAKK,MACpC,2BAAKL,GAAZ,IAAkBL,KAAK,IAElB,2BAAKK,GAAZ,IAAkBI,SAAS,YCzBE,KDgD/BiC,EAAe,KAGbD,EAAY,GAAG1C,QAAU0C,EAAY,GAAG1C,QAC1C8C,YAAW,WArBbvC,GAAS,SAACO,GAAD,OACPA,EAAMC,KAAI,SAACT,GACT,OAAiB,IAAbA,EAAKL,IACA,2BAAKK,GAAZ,IAAkBJ,SAAS,EAAMQ,SAAS,IAErC,2BAAKJ,GAAZ,IAAkBJ,SAAS,YCpCE,KDwD/ByC,EAAe,OAInBK,qBAAU,WACRH,IApD2B,IAAvBH,EAAYX,QACdxB,GAAS,SAACO,GAAD,OACPA,EAAMC,KAAI,SAACT,GACT,OAAO,2BAAKA,GAAZ,IAAkBI,SAAS,YAmDhC,CAACgC,IASJ,MAAO,CACL5B,QACAP,WACAmC,cACAlC,kBAXwB,SAACyC,GACzBN,GAAe,SAACD,GAAD,4BACVA,GADU,aAAC,eAETO,GAFQ,IAEE/C,SAAS,UAS1B0C,aACAnC,kBE5EEyC,EAAYxD,IAAOC,IAAV,2LASTwD,EAAUzD,IAAO0D,EAAV,8HAMPC,EAAW3D,IAAOK,OAAV,oOAcDuD,EAAS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMX,EAAiB,EAAjBA,WAC7B,OACE,eAACM,EAAD,WACE,eAACC,EAAD,8BAA0BI,EAA1B,IAAiCA,GAAQ,EAAI,UAAY,SAAzD,OACA,eAACJ,EAAD,wBAAoBP,EAAa,KACjC,eAACS,EAAD,CAAUxC,QAAS,kBAAM2C,OAAOC,SAASC,UAAzC,2BAEE,mBAAGzC,MAAM,uB,QCpCJ0C,EAAajE,YAAOkE,IAAPlE,CAAH,2NCOVmE,EAAW,SAAC,GAAqB,IAAnB1C,EAAkB,EAAlBA,YACzB,EACEqB,EAASrB,GADHL,EAAR,EAAQA,MAAOP,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,kBAAmBoC,EAA5C,EAA4CA,WAAYnC,EAAxD,EAAwDA,cAExD,ECVqB,WACnB,MAAkCgC,mBAAS,MAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KACA,EAA8BtB,mBAAS,MAAvC,mBAAOuB,EAAP,KAAgBC,EAAhB,KAEMC,EAAiB,WACnB,OAAOC,KAAKC,OAiBhB,OAdApB,qBAAU,WACNF,YAAW,WACPiB,EAAaG,OJbO,QIezB,IAUI,CACHG,WATe,WACfJ,EAAWC,MASXI,cANkB,WAClB,OAAQN,EAAUF,GAAa,MDTCS,GAA9BF,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cACpB,EAAgC7B,oBAAS,GAAzC,mBAAO+B,EAAP,KAAiBC,EAAjB,KAmBA,OAjBAzB,qBAAU,WACHlC,EAAMY,MAAK,mBAAqB,IAArB,EAAGzB,SACjBoE,IACAI,GAAY,MAEb,CAAC3D,IAEJkC,qBAAU,WACRF,YAAW,WACTvC,GAAS,SAACO,GAAD,OACPA,EAAMC,KAAI,SAACT,GACT,OAAO,2BAAKA,GAAZ,IAAkBJ,SAAS,YH3BL,QG+B3B,IAGD,eAACT,EAAD,WACE,cAACU,EAAD,UACE,cAACwD,EAAD,CAAYe,GAAG,IAAf,oBAGF,eAAC9E,EAAD,WACGkB,EAAMC,KAAI,SAACT,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNE,kBAAmBA,EACnBD,SAAUA,EACVE,cAAeA,GAJVH,EAAKK,OAOb6D,GAAY,cAAC,EAAD,CAAQjB,KAAMe,IAAiB1B,WAAYA,W,OE/CnDnD,EAAYC,IAAOC,IAAV,0JAUTgF,EAAQjF,IAAOkF,GAAV,0DAGLC,EAAWnF,IAAOoF,KAAV,oGAORC,EAAWrF,IAAOsF,GAAV,mICnBRC,EAAW,WACtB,OACE,eAAC,EAAD,WACE,cAACN,EAAD,qCACA,cAACE,EAAD,4BACA,+BACE,cAACE,EAAD,UACE,cAACpB,EAAD,CAAYe,GAAG,QAAf,oBAEF,cAACK,EAAD,UACE,cAACpB,EAAD,CAAYe,GAAG,UAAf,sBAEF,cAACK,EAAD,UACE,cAACpB,EAAD,CAAYe,GAAG,QAAf,2BChBGQ,EACH,GADGA,EAED,GAFCA,EAGH,GCiCKC,I,EAAAA,EA1Bf,WACE,IAAOC,EAAsBF,EAAhBG,EAAgBH,EAARI,EAAQJ,EAE7B,OACE,cAAC,IAAD,UACE,8BAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,QAAZ,SACE,cAAC,EAAD,CAAUpE,YAAaiE,MAEzB,cAAC,IAAD,CAAOG,KAAK,UAAZ,SACE,cAAC,EAAD,CAAUpE,YAAakE,MAEzB,cAAC,IAAD,CAAOE,KAAK,QAAZ,SACE,cAAC,EAAD,CAAUpE,YAAamE,MAEzB,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAAC,EAAD,cC1BCC,EAAcC,YAAH,sSCUTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAeC,MCVE,GDUjB,UACE,cAACd,EAAD,IACA,cAAC,EAAD,SAGJe,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.529ff70e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n  max-width: 80vw;\r\n  margin: 0 auto;\r\n  padding-top: 10px;\r\n`;\r\n\r\nexport const StyledBoard = styled.main`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 80%;\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  margin: 20px auto;\r\n\r\n  @media (orientation: portrait) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`;\r\n\r\nexport const StyledCard = styled.button`\r\n  font-size: 40px;\r\n\r\n  color: ${({ color, off, covered }) => {\r\n    if (off) return \"rgb(255, 255, 255)\";\r\n    if (covered) return `rgb(0, 0, 0)`;\r\n    return color;\r\n  }};\r\n\r\n  background: ${({ color, covered, off }) => {\r\n    if (off) return \"rgb(0, 185, 0)\";\r\n    if (covered) return `rgb(0, 0, 0)`;\r\n    return color;\r\n  }};\r\n  border: 2px solid rgb(255, 255, 255);\r\n  transition: 0.3s ease;\r\n\r\n  :hover {\r\n    cursor: ${({ off, covered }) => {\r\n      if (off || !covered) return \"not-allowed\";\r\n      return \"pointer\";\r\n    }};\r\n  }\r\n`;\r\nexport const Nav = styled.nav`\r\n  text-align: right;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { StyledCard } from \"./styled\";\r\n\r\nexport const Card = ({ card, setCards, updateActiveCards, setClickCount }) => {\r\n  const { color, covered, off, blocked, id } = card;\r\n\r\n  const updateCards = () => {\r\n    setCards((cards) =>\r\n      cards.map((card) => {\r\n        if (card.id === id) {\r\n          return {\r\n            ...card,\r\n            covered: !covered,\r\n          };\r\n        }\r\n        return card;\r\n      })\r\n    );\r\n  };\r\n\r\n  const onClickHandle = () => {\r\n    updateCards();\r\n    updateActiveCards(card);\r\n    setClickCount((count) => count + 1);\r\n  };\r\n\r\n  return (\r\n    <StyledCard\r\n      color={color}\r\n      covered={covered}\r\n      off={off}\r\n      disabled={!covered || blocked || off}\r\n      onClick={onClickHandle}\r\n    >\r\n      <i class=\"fas fa-check\"></i>\r\n    </StyledCard>\r\n  );\r\n};\r\n","import { nanoid } from \"nanoid\";\r\nimport { shuffleArray } from \"./shuffleArray\";\r\nimport { useColors } from \"./useColors\";\r\n\r\nexport const GenerateCards = (cardsNumber) => {\r\n  const { generateRandomColor } = useColors();\r\n \r\n  const cards = [];\r\n  const colors = [];\r\n\r\n  while (colors.length < (cardsNumber / 2) ) {\r\n    colors.push(generateRandomColor());\r\n  }\r\n  colors.push(...colors);\r\n\r\n  colors.forEach((color) => {\r\n    cards.push({\r\n      id: nanoid(),\r\n      covered: false,\r\n      off: false,\r\n      blocked: false,\r\n      color,\r\n    });\r\n  });\r\n\r\n  shuffleArray(cards);\r\n\r\n  return cards;\r\n};\r\n","//TODO: test if colors are different every time\r\n\r\nexport const useColors = () => {\r\n  const forbiddenColors = [\r\n    \"rgb(0, 0, 0)\",\r\n    \"rgb(255, 255, 255)\",\r\n    \"rgb(0, 185, 0)\",\r\n  ];\r\n\r\n  const generateNumber = () => {\r\n    return Math.ceil(Math.random() * 255);\r\n  };\r\n\r\n  const generateRandomColor = () => {\r\n    const color = `rgb(${generateNumber()}, ${generateNumber()}, ${generateNumber()})`; \r\n\r\n      if(!forbiddenColors.some(forbidden => forbidden === color)){\r\n        forbiddenColors.push(color);\r\n        return color;\r\n      } else {\r\n        generateRandomColor();\r\n      }\r\n    \r\n  };\r\n\r\n    return {\r\n      generateRandomColor,\r\n    }\r\n};\r\n","export const shuffleArray = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n  }\r\n\r\n  ","import { useEffect, useState } from \"react\";\r\nimport { GenerateCards } from \"./cards\";\r\nimport { twoCardsUncoveredTime } from \"./utils\";\r\n\r\nexport const useCards = (cardsNumber) => {\r\n  const [cards, setCards] = useState(GenerateCards(cardsNumber));\r\n  const [activeCards, setActiveCards] = useState([]);\r\n  const [clickCount, setClickCount] = useState(0);\r\n\r\n  const blockCardsWhileComparing = () => {\r\n    if (activeCards.length === 2) {\r\n      setCards((cards) =>\r\n        cards.map((card) => {\r\n          return { ...card, blocked: true };\r\n        })\r\n      );\r\n    }\r\n    return;\r\n  };\r\n\r\n  const markPairedCardsOff = () => {\r\n    setCards((cards) =>\r\n      cards.map((card) => {\r\n        if (activeCards.find(({ id }) => id === card.id)) {\r\n          return { ...card, off: true };\r\n        }\r\n        return { ...card, blocked: false };\r\n      })\r\n    );\r\n  };\r\n\r\n  const coverNotPairedCards = () => {\r\n    setCards((cards) =>\r\n      cards.map((card) => {\r\n        if (card.off === false) {\r\n          return { ...card, covered: true, blocked: false };\r\n        }\r\n        return { ...card, covered: false };\r\n      })\r\n    );\r\n  };\r\n\r\n  const compareActiveCards = () => {\r\n    if (activeCards.length < 2) return;\r\n\r\n    if (activeCards[0].color === activeCards[1].color) {\r\n      setTimeout(() => {\r\n        markPairedCardsOff();\r\n      }, twoCardsUncoveredTime);\r\n      setActiveCards([]);\r\n    }\r\n\r\n    if (activeCards[0].color !== activeCards[1].color) {\r\n      setTimeout(() => {\r\n        coverNotPairedCards();\r\n      }, twoCardsUncoveredTime);\r\n\r\n      setActiveCards([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    compareActiveCards();\r\n    blockCardsWhileComparing();\r\n  }, [activeCards]);\r\n\r\n  const updateActiveCards = (cardData) => {\r\n    setActiveCards((activeCards) => [\r\n      ...activeCards,\r\n      { ...cardData, covered: false },\r\n    ]);\r\n  };\r\n\r\n  return {\r\n    cards,\r\n    setCards,\r\n    activeCards,\r\n    updateActiveCards,\r\n    clickCount,\r\n    setClickCount,\r\n  };\r\n};\r\n","export const presentationTime = 1500;\r\nexport const twoCardsUncoveredTime = 200;","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst ResultBox = styled.div`\r\n  position: absolute;\r\n  z-index: 3;\r\n  padding: 30px;\r\n  background-color: rgba(236, 236, 236, 0.8);\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: center;\r\n`;\r\nconst ResultP = styled.p`\r\n  text-align: center;\r\n  font-size: 34px;\r\n  /* margin-top: 30px; */\r\n  padding: 30px 15px 10px;\r\n`;\r\nconst TryAgain = styled.button`\r\n  margin: 20px;\r\n  padding: 20px;\r\n  font-size: 24px;\r\n  background-color: transparent;\r\n  border: none;\r\n  transition: 0.3s;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const Result = ({ time, clickCount }) => {\r\n  return (\r\n    <ResultBox>\r\n      <ResultP>You finished in {time} {time >= 2 ? 'seconds' : 'second'}!</ResultP>\r\n      <ResultP>Attempts: {clickCount / 2}</ResultP>\r\n      <TryAgain onClick={() => window.location.reload()}>\r\n        Try again &nbsp;\r\n        <i class=\"fas fa-redo\"></i>\r\n      </TryAgain>\r\n    </ResultBox>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n  padding: 20px 10px;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  color: #008080;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    filter: brightness(1.3);\r\n  }\r\n`;\r\n","import { StyledBoard, Container, Nav } from \"./styled\";\r\nimport { Card } from \"./Card\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useCards } from \"../useCards\";\r\nimport { useTime } from \"../useTime\";\r\nimport { presentationTime } from \"../utils\";\r\nimport { Result } from \"./Result\";\r\nimport { StyledLink } from \"../common/StyledLink\";\r\n\r\n\r\nexport const MainPage = ({ cardsNumber }) => {\r\n  const { cards, setCards, updateActiveCards, clickCount, setClickCount } =\r\n    useCards(cardsNumber);\r\n  const { getEndDate, calculateTime } = useTime();\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!cards.some(({ off }) => off === false)) {\r\n      getEndDate();\r\n      setFinished(true);\r\n    }\r\n  }, [cards]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCards((cards) =>\r\n        cards.map((card) => {\r\n          return { ...card, covered: true };\r\n        })\r\n      );\r\n    }, presentationTime);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Nav>\r\n        <StyledLink to=\"/\">Home</StyledLink>\r\n      </Nav>\r\n\r\n      <StyledBoard>\r\n        {cards.map((card) => (\r\n          <Card\r\n            key={card.id}\r\n            card={card}\r\n            updateActiveCards={updateActiveCards}\r\n            setCards={setCards}\r\n            setClickCount={setClickCount}\r\n          ></Card>\r\n        ))}\r\n        {finished && <Result time={calculateTime()} clickCount={clickCount} />}\r\n      </StyledBoard>\r\n    </Container>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { presentationTime } from \"./utils\";\r\n\r\nexport const useTime = () => {\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    \r\n    const getCurrentDate = () => {\r\n        return Date.now();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setStartDate(getCurrentDate())\r\n        }, presentationTime);\r\n    }, [])\r\n\r\n    const getEndDate = () => {\r\n        setEndDate(getCurrentDate())\r\n    }\r\n\r\n    const calculateTime = () => {\r\n        return (endDate - startDate) / 1000;\r\n    }\r\n\r\n    return {\r\n        getEndDate,\r\n        calculateTime,\r\n    }\r\n\r\n}\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  text-transform: uppercase;\r\n`;\r\nexport const Subtitle = styled.span`\r\n    font-size: 24px;\r\n    text-transform: uppercase;\r\n    margin: 5px;\r\n`;\r\n\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 20px;\r\n  list-style: none;\r\n  transition: 0.3s;\r\n  text-align: center;\r\n  padding: 15px;\r\n`;\r\n\r\n","import { StyledLink } from \"../common/StyledLink\";\r\nimport { ListItem, Title, Container, Subtitle } from \"./styled\";\r\n\r\nexport const HomePage = () => {\r\n  return (\r\n    <Container>\r\n      <Title>Welcome to Memory game</Title>\r\n      <Subtitle>Choose level:</Subtitle>\r\n      <ul>\r\n        <ListItem>\r\n          <StyledLink to=\"/easy\">Easy</StyledLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledLink to=\"/medium\">Medium</StyledLink>\r\n        </ListItem>\r\n        <ListItem>\r\n          <StyledLink to=\"/hard\">Hard</StyledLink>\r\n        </ListItem>\r\n      </ul>\r\n    </Container>\r\n  );\r\n};\r\n","export const difficultyLevels = {\r\n    easy: 18,\r\n    medium: 24,\r\n    hard: 36\r\n}","import { MainPage } from \"./MainPage/MainPage\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { HomePage } from \"./HomePage/HomePage\";\nimport { difficultyLevels } from \"./difficultyLevels\";\n\nfunction App() {\n  const {easy, medium, hard} = difficultyLevels;\n\n  return (\n    <Router>\n      <div>\n\n        <Switch>\n          <Route path=\"/easy\">\n            <MainPage cardsNumber={easy} />\n          </Route>\n          <Route path=\"/medium\">\n            <MainPage cardsNumber={medium} />\n          </Route>\n          <Route path=\"/hard\">\n            <MainPage cardsNumber={hard} />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n        font-family: 'Roboto', sans-serif;\r\n    }\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n        margin: 0;\r\n        padding: 0;\r\n    } \r\n    body {\r\n        font-family: 'Roboto';\r\n        \r\n\r\n    }\r\n`;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    \r\n}"],"sourceRoot":""}